---
import { classMerge } from "@gemini-ui-astro/core";

interface Props extends astroHTML.JSX.HTMLAttributes {
  dynamicGlow?: boolean;
  pulse?: "none" | "light" | "infinite";
  severity: "success" | "warning" | "error" | "info";
}

const {
  class: className,
  dynamicGlow,
  pulse,
  severity,
  ...props
} = Astro.props;

const getAnimationCount = {
  none: "0",
  light: "3",
  infinite: "infinite",
};
---

<section
  {...props}
  class={classMerge(
    "gx-alert",
    dynamicGlow && "gx-dynamic-glow",
    className,
    `gx-alert-${severity}`,
  )}
>
  <div class={classMerge("gx-alert-pulse", `gx-alert-${severity}`)}></div>
  <div class="gx-alert-message">
    <slot />
  </div>
</section>

<style
  lang="scss"
  define:vars={{
    "gx-pulse-duration": pulse
      ? getAnimationCount[pulse]
      : getAnimationCount.light,
  }}
>
  .gx-alert {
    --gx-mouse-angle: 45deg;
    --gx-mouse-distance: 0;

    --percent: calc(75% / (1 + var(--gx-mouse-distance) / 10));
    --shadow-size: calc(
      max(8px, min(24px, calc(1000px / (1 + var(--gx-mouse-distance)))))
    );

    display: flex;
    align-items: center;
    width: 100%;
    background: #23262d;
    border-radius: 12px;
    color: white;
    position: relative;
    margin: 0.5px;
    box-shadow:
      rgba(255, 255, 255, 0.2) 0px 0px 6px 0px,
      rgba(138, 101, 240, 0.125) 0px 0px var(--shadow-size) 4px;

    &.gx-alert-success {
      --border-color: rgba(51, 217, 178, 0.6);
    }

    &.gx-alert-warning {
      --border-color: rgba(255, 121, 63, 0.6);
    }

    &.gx-alert-error {
      --border-color: rgba(255, 82, 82, 0.6);
    }

    &.gx-alert-info {
      --border-color: rgba(52, 172, 224, 0.6);
    }

    &:before {
      content: "";
      margin: -0.5px;
      border-radius: inherit;
      position: absolute;
      inset: 0;
      z-index: -1;
      background: linear-gradient(
        var(--gx-mouse-angle),
        var(--border-color),
        rgba(255, 255, 255, 0.4),
        rgba(255, 255, 255, 0.2) var(--percent)
      );
    }

    .gx-alert-message {
      padding: 10px;
      font-size: 14px;
      font-weight: 500;
    }

    .gx-alert-pulse {
      border-radius: 50%;
      margin: 10px;
      height: 20px;
      width: 20px;
      min-height: 20px;
      min-width: 20px;
      transform: scale(1);
    }
  }

  @keyframes pulse {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.7);
    }

    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);
    }

    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }
  }

  .gx-alert-pulse.gx-alert-success {
    background: rgba(51, 217, 178, 1);
    box-shadow: 0 0 0 0 rgba(51, 217, 178, 1);
    animation: pulse-green 2s var(--gx-pulse-duration);
  }

  @keyframes pulse-green {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(51, 217, 178, 0.7);
    }

    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(51, 217, 178, 0);
    }

    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(51, 217, 178, 0);
    }
  }

  .gx-alert-pulse.gx-alert-warning {
    background: rgba(255, 121, 63, 1);
    box-shadow: 0 0 0 0 rgba(255, 121, 63, 1);
    animation: pulse-orange 2s var(--gx-pulse-duration);
  }

  @keyframes pulse-orange {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(255, 121, 63, 0.7);
    }

    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(255, 121, 63, 0);
    }

    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(255, 121, 63, 0);
    }
  }

  .gx-alert-pulse.gx-alert-error {
    background: rgba(255, 82, 82, 1);
    box-shadow: 0 0 0 0 rgba(255, 82, 82, 1);
    animation: pulse-red 2s var(--gx-pulse-duration);
  }

  @keyframes pulse-red {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(255, 82, 82, 0.7);
    }

    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(255, 82, 82, 0);
    }

    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(255, 82, 82, 0);
    }
  }

  .gx-alert-pulse.gx-alert-info {
    background: rgba(52, 172, 224, 1);
    box-shadow: 0 0 0 0 rgba(52, 172, 224, 1);
    animation: pulse-blue 2s var(--gx-pulse-duration);
  }

  @keyframes pulse-blue {
    0% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(52, 172, 224, 0.7);
    }

    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(52, 172, 224, 0);
    }

    100% {
      transform: scale(0.95);
      box-shadow: 0 0 0 0 rgba(52, 172, 224, 0);
    }
  }
</style>
