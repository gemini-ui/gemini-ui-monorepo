---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-chat-bubble-translate-solid"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-chat-bubble-translate-solid::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"><path fill="currentColor" fill-rule="evenodd" d="M12 1.25C6.063 1.25 1.25 6.063 1.25 12c0 1.856.471 3.605 1.3 5.13l-.787 4.233a.75.75 0 0 0 .874.874l4.233-.788A10.7 10.7 0 0 0 12 22.75c5.937 0 10.75-4.813 10.75-10.75S17.937 1.25 12 1.25M12.75 7a.75.75 0 0 0-1.5 0v.767H7a.75.75 0 0 0 0 1.5h7.173c-.512 1.326-1.286 2.61-2.187 3.81a25 25 0 0 1-.54-.713c-.376-.516-.658-.952-.767-1.183a.75.75 0 0 0-1.358.638c.177.375.538.914.912 1.428.252.345.527.703.791 1.03a35 35 0 0 1-3.1 3.168.75.75 0 1 0 1.01 1.11 37 37 0 0 0 3.107-3.16l1.564 1.61a.75.75 0 1 0 1.076-1.045l-1.684-1.733c1.15-1.492 2.17-3.17 2.77-4.96H17a.75.75 0 0 0 0-1.5h-4.25z" clip-rule="evenodd"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
