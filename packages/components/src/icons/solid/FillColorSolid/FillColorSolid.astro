---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-fill-color-solid"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-fill-color-solid::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"><path fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m2.636 10.293 7.071-7.071 8.485 8.485-7.07 7.071a2 2 0 0 1-2.83 0l-5.656-5.657a2 2 0 0 1 0-2.828"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="m8.293 1.808 1.414 1.414"/><path fill="currentColor" fill-rule="evenodd" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="1.5" stroke-width="1.5" d="M20 15s3 2.993 3 4.887c0 1.655-1.345 3-3 3s-2.988-1.345-3-3C17.01 17.992 20 15 20 15" clip-rule="evenodd"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
