---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-server-connection-solid"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-server-connection-solid::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"><path fill="currentColor" fill-rule="evenodd" d="M5.25 5A.75.75 0 0 1 6 4.25h12a.75.75 0 0 1 .75.75v8a.75.75 0 0 1-.75.75h-5.25v4.5H21a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1 0-1.5h8.25v-4.5H6a.75.75 0 0 1-.75-.75zm4.262 3.442A.75.75 0 0 1 9.567 9.5l-.01.01a.75.75 0 1 1-1.114-1.003l.01-.01a.75.75 0 0 1 1.059-.056M12.568 9.5a.75.75 0 1 0-1.115-1.004l-.01.011a.75.75 0 1 0 1.114 1.004z" clip-rule="evenodd"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
