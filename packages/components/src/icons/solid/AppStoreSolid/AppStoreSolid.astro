---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-app-store-solid"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-app-store-solid::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none"><path fill="currentColor" fill-rule="evenodd" d="M1.25 12C1.25 6.063 6.063 1.25 12 1.25S22.75 6.063 22.75 12 17.937 22.75 12 22.75 1.25 17.937 1.25 12m8.847-7.133a.75.75 0 0 1 1.036.23L12 6.46l.867-1.363a.75.75 0 1 1 1.266.806l-1.244 1.954 3.432 5.393H17.5a.75.75 0 0 1 0 1.5h-.225l.858 1.347a.75.75 0 1 1-1.266.806L12 9.254 9.457 13.25H13.5a.75.75 0 0 1 0 1.5H8.503l-1.37 2.153a.75.75 0 0 1-1.266-.806l.858-1.347H6.5a.75.75 0 0 1 0-1.5h1.18l3.431-5.393-1.244-1.954a.75.75 0 0 1 .23-1.036" clip-rule="evenodd"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
