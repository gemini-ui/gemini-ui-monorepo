---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-color-picker-regular"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-color-picker-regular::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke-width="1.5"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="m7 13.161 5.464-5.464a1 1 0 0 1 1.415 0l2.12 2.12a1 1 0 0 1 0 1.415l-1.928 1.929m-7.071 0-2.172 2.172a1 1 0 0 0-.218.327l-1.028 2.496c-.508 1.233.725 2.466 1.958 1.959l2.497-1.028q.185-.077.326-.218l5.708-5.708m-7.071 0h7.071m-.193-9.707 2.121 2.121m4.243 4.243-2.121-2.121m-2.122-2.122 1.414-1.414a1 1 0 0 1 1.415 0l.707.707a1 1 0 0 1 0 1.414L18.12 7.697m-2.122-2.122 2.122 2.122"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
