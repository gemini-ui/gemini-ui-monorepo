---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-coins-regular"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-coins-regular::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke-width="1.5"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M16 13c-2.761 0-5-1.12-5-2.5S13.239 8 16 8s5 1.12 5 2.5-2.239 2.5-5 2.5m-5 1.5c0 1.38 2.239 2.5 5 2.5s5-1.12 5-2.5m-18-5C3 10.88 5.239 12 8 12c1.126 0 2.165-.186 3-.5M3 13c0 1.38 2.239 2.5 5 2.5 1.126 0 2.164-.186 3-.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M3 5.5v11C3 17.88 5.239 19 8 19c1.126 0 2.164-.186 3-.5m2-10v-3m-2 5v8c0 1.38 2.239 2.5 5 2.5s5-1.12 5-2.5v-8"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M8 8C5.239 8 3 6.88 3 5.5S5.239 3 8 3s5 1.12 5 2.5S10.761 8 8 8"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
