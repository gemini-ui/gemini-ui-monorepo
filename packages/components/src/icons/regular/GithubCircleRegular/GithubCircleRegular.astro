---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-github-circle-regular"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-github-circle-regular::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke-width="1.5"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M14.333 19v-1.863c.025-.31-.018-.62-.126-.913a2.2 2.2 0 0 0-.5-.781c2.093-.227 4.293-1 4.293-4.544a3.48 3.48 0 0 0-1-2.434 3.2 3.2 0 0 0-.06-2.448s-.787-.227-2.607.961a9.15 9.15 0 0 0-4.666 0c-1.82-1.188-2.607-.96-2.607-.96A3.2 3.2 0 0 0 7 8.464a3.48 3.48 0 0 0-1 2.453c0 3.519 2.2 4.291 4.293 4.544a2.2 2.2 0 0 0-.496.773 2.1 2.1 0 0 0-.13.902V19"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M9.667 17.702c-2 .631-3.667 0-4.667-1.948"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
