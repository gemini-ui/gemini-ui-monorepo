---
import { getSizeProp, type OptionalSizeProp } from "@gemini-ui-astro/core";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  size?: OptionalSizeProp;
}

const { class: className, size, ...rest } = Astro.props;
---

<i {...rest} class="gx-icon gx-icon-user-star-regular"></i>

<style
  lang="scss"
  define:vars={{
    "gx-size": size ? getSizeProp(size) : "inherit",
  }}
>
  .gx-icon-user-star-regular::before{mask-image:url('data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" stroke-width="1.5"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M12 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" d="M5 20v-1a7 7 0 0 1 10-6.326m1.635 3.741 1.039-2.203a.357.357 0 0 1 .652 0l1.04 2.203 2.323.356c.298.045.416.429.2.649l-1.68 1.713.396 2.421c.051.311-.26.548-.527.401L18 20.812l-2.078 1.143c-.267.147-.578-.09-.527-.4l.396-2.422-1.68-1.713c-.216-.22-.098-.604.2-.65z"/></svg>');}

  .gx-icon {
    display: inline-block;
    font-size: var(--gx-size);

    &::before {
      content: " ";
      display: block;
      background: currentColor;
      mask-size: cover;
      -webkit-mask-size: cover;
      width: 1em;
      height: 1em;
    }
  }
</style>
