---
interface Props {
  variant:
    | "h1"
    | "h2"
    | "h3"
    | "h4"
    | "h5"
    | "h6"
    | "subtitle1"
    | "subtitle2"
    | "body1"
    | "body2"
    | "caption"
    | "overline";
  override?:
    | "h1"
    | "h2"
    | "h3"
    | "h4"
    | "h5"
    | "h6"
    | "subtitle1"
    | "subtitle2"
    | "body1"
    | "body2"
    | "caption"
    | "overline";
  class?: string;
}

const elementMap = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  caption: "p",
  overline: "p",
};

const { class: className, variant, override, ...props } = Astro.props;

const Element = override ? elementMap[override] : elementMap[variant];
---

<Element {...props} class:list={["gx-typography", variant, className]}>
  <slot />
</Element>

<style lang="scss">
  .gx-typography {
    &.h1 {
      font-size: 4rem;
      font-weight: 300;
      margin: 0;
    }
    &.h2 {
      font-size: 3rem;
      font-weight: 300;
      margin: 0;
    }
    &.h3 {
      font-size: 2.25rem;
      font-weight: 300;
      margin: 0;
    }
    &.h4 {
      font-size: 1.75rem;
      font-weight: 300;
      margin: 0;
    }
    &.h5 {
      font-size: 1.5rem;
      font-weight: 300;
      margin: 0;
    }
    &.h6 {
      font-size: 1rem;
      font-weight: 300;
      margin: 0;
    }
    &.body1 {
      font-size: 1rem;
    }

    &.body2 {
      font-size: 0.875rem;
    }

    &.caption {
      font-size: 0.75rem;
    }

    &.subtitle1 {
      font-size: 1rem;
      font-weight: 500;
      margin: 0;
    }

    &.subtitle2 {
      font-size: 0.875rem;
      font-weight: 700;
      margin: 0;
    }

    &.overline {
      text-transform: uppercase;
      letter-spacing: 3px;
      font-size: 0.75rem;
    }
  }
</style>
