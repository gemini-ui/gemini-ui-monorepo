---
interface Props {
  variant:
    | "h1"
    | "h2"
    | "h3"
    | "h4"
    | "h5"
    | "h6"
    | "subtitle1"
    | "subtitle2"
    | "body1"
    | "body2"
    | "caption"
    | "overline";
  as?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "p" | "span";
  class?: string;
}

const elementMap = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  subtitle1: "h6",
  subtitle2: "h6",
  body1: "p",
  body2: "p",
  caption: "p",
  overline: "p",
};

const { class: className, variant, as, ...props } = Astro.props as Props;

const Element = as ?? elementMap[variant];
---

<Element
  {...props}
  class:list={["gx-typography", `gx-typography-${variant}`, className]}
>
  <slot />
</Element>

<style lang="scss">
  .gx-typography {
    &.gx-typography-h1 {
      font-size: 4rem;
      font-weight: 300;
      margin: 0;
    }
    &.gx-typography-h2 {
      font-size: 3rem;
      font-weight: 300;
      margin: 0;
    }
    &.gx-typography-h3 {
      font-size: 2.25rem;
      font-weight: 300;
      margin: 0;
    }
    &.gx-typography-h4 {
      font-size: 1.75rem;
      font-weight: 300;
      margin: 0;
    }
    &.gx-typography-h5 {
      font-size: 1.5rem;
      font-weight: 300;
      margin: 0;
    }
    &.gx-typography-h6 {
      font-size: 1rem;
      font-weight: 300;
      margin: 0;
    }
    &.gx-typography-body1 {
      font-size: 1rem;
    }

    &.gx-typography-body2 {
      font-size: 0.875rem;
    }

    &.gx-typography-caption {
      font-size: 0.75rem;
    }

    &.gx-typography-subtitle1 {
      font-size: 1rem;
      font-weight: 500;
      margin: 0;
    }

    &.gx-typography-subtitle2 {
      font-size: 0.875rem;
      font-weight: 700;
      margin: 0;
    }

    &.gx-typography-overline {
      text-transform: uppercase;
      letter-spacing: 3px;
      font-size: 0.75rem;
    }
  }
</style>
