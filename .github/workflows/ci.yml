name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  pr-title:
    name: Check PR Title
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: Slashgear/action-check-pr-title@v4.3.0
        with:
          regexp: "^([a-z]+|BREAKING CHANGE)\\((website|core|components|components-blog|styles|repo)(,(website|core|components|components-blog|styles|repo))?\\): .*$"
      - uses: mshick/add-pr-comment@v2
        if: ${{ failure() }}
        with:
          message: |
            ## ❌ PR Title Check Failed
            Please follow the PR title format: <type>(<scope(s)>): <description>
            <type> can be one of the following:
            - feat
            - fix
            - docs
            - style
            - refactor
            - perf
            - test
            - chore
            - revert
            <scope> can be one of the following (or a comma separated list of them):
            - website
            - core
            - components
            - components-blog
            - styles
            - repo
            <description> should be a short description of the changes
            For example: feat(website): add new page
      - uses: mshick/add-pr-comment@v2
        if: ${{ success() }}
        with:
          message: |
            ## ✅ PR Title Check Passed
            The PR title is formatted correctly.
  dependency-review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4
      - name: "Dependency Review"
        uses: actions/dependency-review-action@v4
        with:
          comment-summary-in-pr: always
  prettier:
    name: Prettier Check
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          always-auth: true
          node-version-file: .nvmrc
      - name: Node Modules Cache
        id: node_modules_cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node_modules-
      - name: Install
        if: ${{ steps.node_modules_cache.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Check Formatting
        run: npm run format:check
